(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[649],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return s}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),k=d(n),s=r,u=k["".concat(p,".").concat(s)]||k[s]||m[s]||o;return n?a.createElement(u,l(l({ref:t},c),{},{components:n})):a.createElement(u,l({ref:t},c))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=k;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<o;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9041:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return i},toc:function(){return p},default:function(){return c}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),l={id:"api",title:"API",sidebar_label:"API"},i={unversionedId:"api",id:"api",isDocsHomePage:!1,title:"API",description:"mode",source:"@site/docs/API.mdx",sourceDirName:".",slug:"/api",permalink:"/react-native-feedback-reporter/docs/api",editUrl:"https://github.com/ximxim/react-native-feedback-reporter/tree/master/website/docs/API.mdx",version:"current",sidebar_label:"API",frontMatter:{id:"api",title:"API",sidebar_label:"API"},sidebar:"docs",previous:{title:"Theme",permalink:"/react-native-feedback-reporter/docs/theme"},next:{title:"JIRA",permalink:"/react-native-feedback-reporter/docs/jira"}},p=[{value:"<code>mode</code>",id:"mode",children:[]},{value:"<code>theme</code>",id:"theme",children:[]},{value:"<code>modalProps</code>",id:"modalprops",children:[{value:"<code>header</code>",id:"header",children:[]}]},{value:"<code>slack</code>",id:"slack",children:[{value:"<code>botToken *</code>",id:"bottoken-",children:[]},{value:"<code>channel</code>",id:"channel",children:[]},{value:"<code>order</code>",id:"order",children:[]}]},{value:"<code>jira</code>",id:"jira",children:[{value:"<code>domain *</code>",id:"domain-",children:[]},{value:"<code>username</code>",id:"username",children:[]},{value:"<code>token</code>",id:"token",children:[]},{value:"<code>projectField</code>",id:"projectfield",children:[]},{value:"<code>issueTypeField</code>",id:"issuetypefield",children:[]},{value:"<code>order</code>",id:"order-1",children:[]}]},{value:"<code>extraSource</code>",id:"extrasource",children:[]},{value:"<code>asyncStorage</code>",id:"asyncstorage",children:[{value:"<code>getItem *</code>",id:"getitem-",children:[]},{value:"<code>setItem *</code>",id:"setitem-",children:[]}]},{value:"<code>devNotes</code>",id:"devnotes",children:[]}],d={toc:p};function c(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"mode"},(0,o.kt)("inlineCode",{parentName:"h2"},"mode")),(0,o.kt)("p",null,"Use this prop to set when feedback reporter modal should appear."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"'onScreenShot'")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { FeedbackReporter } from 'react-native-feedback-reporter';\n\n<FeedbackReporter mode='onScreenShot'/>\n")),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"theme"},(0,o.kt)("inlineCode",{parentName:"h2"},"theme")),(0,o.kt)("p",null,"Use this prop to customize the ",(0,o.kt)("inlineCode",{parentName:"p"},"colors")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"fonts"),". See ",(0,o.kt)("a",{parentName:"p",href:"theme"},"theme documentation")," for more information."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { FeedbackReporter, theme } from 'react-native-feedback-reporter';\n\n<FeedbackReporter\n  theme={{\n    ...theme.base,\n    colors: {\n      ...theme.base.colors,\n      brandPrimary: '#feda4a',\n      brandSecondary: 'black',\n    },\n  }}\n/>\n")),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"modalprops"},(0,o.kt)("inlineCode",{parentName:"h2"},"modalProps")),(0,o.kt)("p",null,"Use this prop to override the modal behaviour and elements in the modal header."),(0,o.kt)("h3",{id:"header"},(0,o.kt)("inlineCode",{parentName:"h3"},"header")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"left"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{ label?: string; onPress?: () => void; component?: ReactNode; }"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"heading"),(0,o.kt)("td",{parentName:"tr",align:null},"string")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"right"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{ label?: string; onPress?: () => void; component?: ReactNode; }"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { FeedbackReporter, theme } from 'react-native-feedback-reporter';\n\n<FeedbackReporter\n  modalProps={{\n    header: { heading: 'Custom Heading' },\n    // other react native modal props: https://reactnative.dev/docs/modal\n  }}\n/>\n")),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"slack"},(0,o.kt)("inlineCode",{parentName:"h2"},"slack")),(0,o.kt)("p",null,"Use this prop to enable slack integration. See ",(0,o.kt)("a",{parentName:"p",href:"slack"},"slack documentation")," for more information."),(0,o.kt)("h3",{id:"bottoken-"},(0,o.kt)("inlineCode",{parentName:"h3"},"botToken *")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"slack"},"slack documentation")," on how to get ",(0,o.kt)("inlineCode",{parentName:"p"},"botToken"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string")))),(0,o.kt)("h3",{id:"channel"},(0,o.kt)("inlineCode",{parentName:"h3"},"channel")),(0,o.kt)("p",null,"Use this prop to set default slack public channel."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string")))),(0,o.kt)("h3",{id:"order"},(0,o.kt)("inlineCode",{parentName:"h3"},"order")),(0,o.kt)("p",null,"Use this prop to order slack components, exclude any control that you wish to hide from this array."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"array of enums(",(0,o.kt)("inlineCode",{parentName:"td"},"'slack_switch'"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"'slack_channels_selector'"),")"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"['slack_switch', 'slack_channels_selector']"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { FeedbackReporter, SlackComponents } from 'react-native-feedback-reporter';\n\n<FeedbackReporter\n  slack={{\n    channel: 'random',\n    botToken: SLACK_BOT_TOKEN,\n    order: [\n      SlackComponents.SlackSwitch,\n      SlackComponents.SlackChannelsSelector,\n    ],\n  }}\n/>\n")),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"jira"},(0,o.kt)("inlineCode",{parentName:"h2"},"jira")),(0,o.kt)("p",null,"Use this prop to enable slack integration. See ",(0,o.kt)("a",{parentName:"p",href:"jira"},"JIRA documentation")," for more information."),(0,o.kt)("h3",{id:"domain-"},(0,o.kt)("inlineCode",{parentName:"h3"},"domain *")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"jira"},"JIRA documentation")," on how to get ",(0,o.kt)("inlineCode",{parentName:"p"},"domain"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string")))),(0,o.kt)("h3",{id:"username"},(0,o.kt)("inlineCode",{parentName:"h3"},"username")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"jira"},"JIRA documentation")," on how to get ",(0,o.kt)("inlineCode",{parentName:"p"},"username"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string")))),(0,o.kt)("h3",{id:"token"},(0,o.kt)("inlineCode",{parentName:"h3"},"token")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"jira"},"JIRA documentation")," on how to get ",(0,o.kt)("inlineCode",{parentName:"p"},"token"),"."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"string")))),(0,o.kt)("h3",{id:"projectfield"},(0,o.kt)("inlineCode",{parentName:"h3"},"projectField")),(0,o.kt)("p",null,"Use this prop to set a default project to submit JIRA issue to."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{ defaultValue: string }"))))),(0,o.kt)("h3",{id:"issuetypefield"},(0,o.kt)("inlineCode",{parentName:"h3"},"issueTypeField")),(0,o.kt)("p",null,"Use this prop to set a default issue type to submit JIRA issue using."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{ defaultValue: string }"))))),(0,o.kt)("h3",{id:"order-1"},(0,o.kt)("inlineCode",{parentName:"h3"},"order")),(0,o.kt)("p",null,"Use this prop to order jira components, exclude any control that you wish to hide from this array."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"array of enums(",(0,o.kt)("inlineCode",{parentName:"td"},"'jira_switch'"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"'jira_projects'"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"'jira_issue_types'"),", ",(0,o.kt)("inlineCode",{parentName:"td"},"'jira_account_linking'"),")"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"['jira_switch', 'jira_projects', 'jira_issue_types', 'jira_account_linking']"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { FeedbackReporter, JIRAComponents } from 'react-native-feedback-reporter';\n\n<FeedbackReporter\n  jira={{\n    domain: JIRA_DOMAIN, // https://{ORGANIZATION}.atlassian.net\n    issueTypeField: {\n      defaultValue: 'story',\n    },\n    projectField: {\n      defaultValue: 'apitest',\n    },\n    order: [\n      JIRAComponents.JIRASwitch,\n      JIRAComponents.JIRAProjects,\n      JIRAComponents.JIRAIssueTypes,\n      JIRAComponents.JIRAAccountLinking,\n    ],\n  }}\n/>\n")),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"extrasource"},(0,o.kt)("inlineCode",{parentName:"h2"},"extraSource")),(0,o.kt)("p",null,"Use this prop to enable extra attachments using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ivpusic/react-native-image-crop-picker"},"react-native-image-crop-picker")," package."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"'react-native-image-crop-picker'"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { FeedbackReporter } from 'react-native-feedback-reporter';\n\n<FeedbackReporter\n  extraSource=\"react-native-image-crop-picker\"\n/>\n")),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"asyncstorage"},(0,o.kt)("inlineCode",{parentName:"h2"},"asyncStorage")),(0,o.kt)("p",null,"Use this prop to enable storage of preferences and credentials. It is recommended to use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pradeep1991singh/react-native-secure-key-store"},"react-native-secure-key-store")," package since it provides extra layer of security when saving ."),(0,o.kt)("h3",{id:"getitem-"},(0,o.kt)("inlineCode",{parentName:"h3"},"getItem *")),(0,o.kt)("p",null,"Use this prop to order jira components, exclude any control that you wish to hide from this array."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"(key: string) => Promise<string>"))))),(0,o.kt)("h3",{id:"setitem-"},(0,o.kt)("inlineCode",{parentName:"h3"},"setItem *")),(0,o.kt)("p",null,"Use this prop to order jira components, exclude any control that you wish to hide from this array."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"(key: string, value: string) => Promise<void>"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { FeedbackReporter } from 'react-native-feedback-reporter';\nimport RNSecureKeyStore, { ACCESSIBLE } from 'react-native-secure-key-store';\n\nReact.useEffect(() => {\n  /*\n  * OPTIONAL: add this line if you would like have the credentials saved\n  * even after app reinstall\n  */\n  RNSecureKeyStore?.setResetOnAppUninstallTo?.(false);\n}, []);\n\n<FeedbackReporter\n  asyncStorage={{\n    getItem: (key) => {\n      return RNSecureKeyStore.get(key);\n    },\n    setItem: (key, value) => {\n      return RNSecureKeyStore.set(key, value, {\n        accessible: ACCESSIBLE.ALWAYS_THIS_DEVICE_ONLY,\n      });\n    },\n  }}\n/>\n")),(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"devnotes"},(0,o.kt)("inlineCode",{parentName:"h2"},"devNotes")),(0,o.kt)("p",null,"Use this prop to add developer notes to any feedback report."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note: Following sample uses react-native-device-info library to capture device information.")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"string")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"(() => Promise<string>)")," or ",(0,o.kt)("inlineCode",{parentName:"td"},"(() => string)"))))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import DeviceInfo from 'react-native-device-info';\nimport { FeedbackReporter } from 'react-native-feedback-reporter';\n\n<FeedbackReporter\n  devNotes={async () => {\n    const [\n      deviceName,\n      ipAddress,\n      manufacturer,\n      powerState,\n    ] = await Promise.all([\n      DeviceInfo.getDeviceName(),\n      DeviceInfo.getIpAddress(),\n      DeviceInfo.getManufacturer(),\n      DeviceInfo.getPowerState(),\n    ]);\n\n    return `\nBrand: ${DeviceInfo.getBrand()}\nBuild Number: ${DeviceInfo.getBuildNumber()}\nBundle ID: ${DeviceInfo.getBundleId()}\nDevice ID: ${DeviceInfo.getDeviceId()}\nDevice Name: ${deviceName}\nIP Address: ${ipAddress}\nManufacturer: ${manufacturer}\nModel: ${DeviceInfo.getModel()}\nPower State: ${JSON.stringify(powerState)}\nReadable Version: ${DeviceInfo.getReadableVersion()}\nSystem Name: ${DeviceInfo.getSystemName()}\nSysterm Version: ${DeviceInfo.getSystemVersion()}\nUnique ID: ${DeviceInfo.getUniqueId()}\nVersion: ${DeviceInfo.getVersion()}\n    `;\n  }}\n/>\n")),(0,o.kt)("br",null),(0,o.kt)("br",null))}c.isMDXComponent=!0}}]);