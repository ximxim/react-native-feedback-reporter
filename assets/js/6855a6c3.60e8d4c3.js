(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[126],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),f=a,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7194:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i={id:"usage",title:"Usage",sidebar_label:"Usage"},c={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Basic",source:"@site/docs/Usage.mdx",sourceDirName:".",slug:"/usage",permalink:"/react-native-feedback-reporter/docs/usage",editUrl:"https://github.com/ximxim/react-native-feedback-reporter/tree/master/website/docs/Usage.mdx",version:"current",sidebar_label:"Usage",frontMatter:{id:"usage",title:"Usage",sidebar_label:"Usage"},sidebar:"docs",previous:{title:"Installation",permalink:"/react-native-feedback-reporter/docs/install"},next:{title:"Manual linking",permalink:"/react-native-feedback-reporter/docs/link"}},s=[{value:"Basic",id:"basic",children:[]},{value:"Advanced",id:"advanced",children:[]},{value:"More",id:"more",children:[]}],l={toc:s};function u(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"basic"},"Basic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as React from 'react';\nimport { JIRA_DOMAIN, SLACK_BOT_TOKEN } from '@env';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { FeedbackReporter } from 'react-native-feedback-reporter';\n\nexport default function App() {\n  return (\n    <View>\n      <Text>Result of some sort</Text>\n      <FeedbackReporter />\n    </View>\n  );\n}\n")),(0,o.kt)("h3",{id:"advanced"},"Advanced"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as React from 'react';\nimport DeviceInfo from 'react-native-device-info';\nimport { JIRA_DOMAIN, SLACK_BOT_TOKEN } from '@env';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { FeedbackReporter, theme } from 'react-native-feedback-reporter';\nimport RNSecureKeyStore, { ACCESSIBLE } from 'react-native-secure-key-store';\n\nexport default function App() {\n  const handleShow = () => console.log('Modal appeared');\n\n  React.useEffect(() => {\n    RNSecureKeyStore?.setResetOnAppUninstallTo?.(false);\n  }, []);\n\n  return (\n    <View>\n      <Text>Result of some sort</Text>\n      <FeedbackReporter\n        theme={{\n          ...theme.base,\n          colors: {\n            ...theme.base.colors,\n            brandPrimary: '#feda4a',\n            brandSecondary: 'black',\n          },\n        }}\n        modalProps={{\n          onShow: handleShow,\n          header: { heading: 'Custom Heading' },\n        }}\n        slack={{\n          channel: 'random',\n          botToken: SLACK_BOT_TOKEN, // Read Slack inegration doc to get this token for your slack team\n        }}\n        jira={{\n          domain: JIRA_DOMAIN, // https://{ORGANIZATION}.atlassian.net\n          issueTypeField: {\n            defaultValue: 'story',\n            isVisible: false,\n          },\n          projectField: {\n            defaultValue: 'apitest',\n          },\n        }}\n        extraSource=\"react-native-image-crop-picker\"\n        asyncStorage={{\n          getItem: (key) => {\n            return RNSecureKeyStore.get(key);\n          },\n          setItem: (key, value) => {\n            return RNSecureKeyStore.set(key, value, {\n              accessible: ACCESSIBLE.ALWAYS_THIS_DEVICE_ONLY,\n            });\n          },\n        }}\n        devNotes={async () => {\n          const [\n            deviceName,\n            ipAddress,\n            manufacturer,\n            powerState,\n          ] = await Promise.all([\n            DeviceInfo.getDeviceName(),\n            DeviceInfo.getIpAddress(),\n            DeviceInfo.getManufacturer(),\n            DeviceInfo.getPowerState(),\n          ]);\n\n          return `\nBrand: ${DeviceInfo.getBrand()}\nBuild Number: ${DeviceInfo.getBuildNumber()}\nBundle ID: ${DeviceInfo.getBundleId()}\nDevice ID: ${DeviceInfo.getDeviceId()}\nDevice Name: ${deviceName}\nIP Address: ${ipAddress}\nManufacturer: ${manufacturer}\nModel: ${DeviceInfo.getModel()}\nPower State: ${JSON.stringify(powerState)}\nReadable Version: ${DeviceInfo.getReadableVersion()}\nSystem Name: ${DeviceInfo.getSystemName()}\nSysterm Version: ${DeviceInfo.getSystemVersion()}\nUnique ID: ${DeviceInfo.getUniqueId()}\nVersion: ${DeviceInfo.getVersion()}\n          `;\n        }}\n      />\n    </View>\n  );\n}\n")),(0,o.kt)("h3",{id:"more"},"More"),(0,o.kt)("p",null,"For more examples, ",(0,o.kt)("a",{parentName:"p",href:"api"},"head over to API section.")))}u.isMDXComponent=!0}}]);