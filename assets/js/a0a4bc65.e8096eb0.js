(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[781],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,v=m["".concat(p,".").concat(d)]||m[d]||l[d]||a;return r?n.createElement(v,i(i({ref:t},s),{},{components:r})):n.createElement(v,i({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1128:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return s}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i={id:"useDeveloperOverride",title:"useDeveloperOverride",sidebar_label:"useDeveloperOverride"},c={unversionedId:"useDeveloperOverride",id:"useDeveloperOverride",isDocsHomePage:!1,title:"useDeveloperOverride",description:"The useDeveloperOverride hook let's add an easter egg in the app to enable RNFR.",source:"@site/docs/useDeveloperOverride.mdx",sourceDirName:".",slug:"/useDeveloperOverride",permalink:"/react-native-feedback-reporter/docs/useDeveloperOverride",editUrl:"https://github.com/ximxim/react-native-feedback-reporter/tree/master/website/docs/useDeveloperOverride.mdx",version:"current",sidebar_label:"useDeveloperOverride",frontMatter:{id:"useDeveloperOverride",title:"useDeveloperOverride",sidebar_label:"useDeveloperOverride"},sidebar:"docs",previous:{title:"FeedbackReporter",permalink:"/react-native-feedback-reporter/docs/FeedbackReporter"},next:{title:"JIRA",permalink:"/react-native-feedback-reporter/docs/jira"}},p=[{value:"Options",id:"options",children:[{value:"times",id:"times",children:[]},{value:"numDaysToExpire",id:"numdaystoexpire",children:[]}]}],u={toc:p};function s(e){var t=e.components,r=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"useDeveloperOverride")," hook let's add an easter egg in the app to enable RNFR."),(0,a.kt)("p",null,"The default behaviour is going to expect the user to tap on an element 10 times and the perference expires the next time the app is launched."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React, { FunctionComponent } from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport { useDeveloperOverride } from 'react-native-feedback-reporter';\n\nexport const EasterEggComponent: FunctionComponent<unknown> = () => {\n  const { increment } = useDeveloperOverride();\n\n  return (\n    <TouchableOpacity onPress={increment}>\n      <Text>Touch this text 10 times to enable</Text>\n    </TouchableOpacity>\n  );\n};\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("h3",{id:"times"},"times"),(0,a.kt)("p",null,"Sometimes we want to change the amount of times a user would have to tap an element to enable RNFR. We can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"times")," prop to customize it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React, { FunctionComponent } from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport { useDeveloperOverride } from 'react-native-feedback-reporter';\n\nexport const EasterEggComponent: FunctionComponent<unknown> = () => {\n  const { increment } = useDeveloperOverride({ times: 5 });\n\n  return (\n    <TouchableOpacity onPress={increment}>\n      <Text>Touch this text 5 times to enable</Text>\n    </TouchableOpacity>\n  );\n};\n")),(0,a.kt)("h3",{id:"numdaystoexpire"},"numDaysToExpire"),(0,a.kt)("p",null,"Sometimes we want to change how long to remember user preference. We can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"numDaysToExpire")," prop to customize it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React, { FunctionComponent } from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport { useDeveloperOverride } from 'react-native-feedback-reporter';\n\nexport const EasterEggComponent: FunctionComponent<unknown> = () => {\n  const { increment } = useDeveloperOverride({ numDaysToExpire: 1 });\n\n  return (\n    <TouchableOpacity onPress={increment}>\n      <Text>Touch this text 10 times to enable</Text>\n    </TouchableOpacity>\n  );\n};\n")))}s.isMDXComponent=!0}}]);