(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[126],{3905:function(e,n,r){"use strict";r.d(n,{Zo:function(){return d},kt:function(){return f}});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(r),f=a,m=p["".concat(s,".").concat(f)]||p[f]||u[f]||o;return r?t.createElement(m,i(i({ref:n},d),{},{components:r})):t.createElement(m,i({ref:n},d))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7194:function(e,n,r){"use strict";r.r(n),r.d(n,{frontMatter:function(){return i},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var t=r(2122),a=r(9756),o=(r(7294),r(3905)),i={id:"usage",title:"Usage",sidebar_label:"Usage"},c={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Basic",source:"@site/docs/Usage.mdx",sourceDirName:".",slug:"/usage",permalink:"/react-native-feedback-reporter/docs/usage",editUrl:"https://github.com/ximxim/react-native-feedback-reporter/tree/master/website/docs/Usage.mdx",version:"current",sidebar_label:"Usage",frontMatter:{id:"usage",title:"Usage",sidebar_label:"Usage"},sidebar:"docs",previous:{title:"Installation",permalink:"/react-native-feedback-reporter/docs/install"},next:{title:"Manual linking",permalink:"/react-native-feedback-reporter/docs/link"}},s=[{value:"Basic",id:"basic",children:[]},{value:"Advanced",id:"advanced",children:[]},{value:"More",id:"more",children:[]}],l={toc:s};function d(e){var n=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"basic"},"Basic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as React from 'react';\nimport { FeedbackReporter } from 'react-native-feedback-reporter';\n\nexport default function App() {\n  return (\n    <FeedbackReporter>\n      <App />\n    </FeedbackReporter>\n  );\n}\n")),(0,o.kt)("h3",{id:"advanced"},"Advanced"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as React from 'react';\nimport DeviceInfo from 'react-native-device-info';\nimport { JIRA_DOMAIN, SLACK_BOT_TOKEN } from '@env';\nimport { FeedbackReporter, theme } from 'react-native-feedback-reporter';\n\nexport default function App() {\n  const handleShow = () => console.log('Modal appeared');\n\n  return (\n    <FeedbackReporter\n      theme={{\n        ...theme.base,\n        colors: {\n          ...theme.base.colors,\n          brandPrimary: '#feda4a',\n          brandSecondary: 'black',\n        },\n      }}\n      modalProps={{\n        onShow: handleShow,\n        header: { heading: 'Custom Heading' },\n      }}\n      slack={{\n        channel: 'random',\n        botToken: SLACK_BOT_TOKEN, // Read Slack inegration doc to get this token for your slack team\n      }}\n      jira={{\n        domain: JIRA_DOMAIN, // https://{ORGANIZATION}.atlassian.net\n        issueTypeField: {\n          defaultValue: 'story',\n          isVisible: false,\n        },\n        projectField: {\n          defaultValue: 'apitest',\n        },\n      }}\n      extraSource=\"react-native-image-crop-picker\"\n      devNotes={async () => {\n        const [\n          deviceName,\n          ipAddress,\n          manufacturer,\n          powerState,\n        ] = await Promise.all([\n          DeviceInfo.getDeviceName(),\n          DeviceInfo.getIpAddress(),\n          DeviceInfo.getManufacturer(),\n          DeviceInfo.getPowerState(),\n        ]);\n\n        return `\nBrand: ${DeviceInfo.getBrand()}\nBuild Number: ${DeviceInfo.getBuildNumber()}\nBundle ID: ${DeviceInfo.getBundleId()}\nDevice ID: ${DeviceInfo.getDeviceId()}\nDevice Name: ${deviceName}\nIP Address: ${ipAddress}\nManufacturer: ${manufacturer}\nModel: ${DeviceInfo.getModel()}\nPower State: ${JSON.stringify(powerState)}\nReadable Version: ${DeviceInfo.getReadableVersion()}\nSystem Name: ${DeviceInfo.getSystemName()}\nSysterm Version: ${DeviceInfo.getSystemVersion()}\nUnique ID: ${DeviceInfo.getUniqueId()}\nVersion: ${DeviceInfo.getVersion()}\n        `;\n      }}\n    >\n      <App />\n    </FeedbackReporter>\n  );\n}\n")),(0,o.kt)("h3",{id:"more"},"More"),(0,o.kt)("p",null,"For more examples, ",(0,o.kt)("a",{parentName:"p",href:"FeedbackReporter"},"head over to API section.")))}d.isMDXComponent=!0}}]);